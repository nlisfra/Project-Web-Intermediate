importScripts("https://storage.googleapis.com/workbox-cdn/releases/6.5.4/workbox-sw.js");const CACHE_NAME="dicoding-cerita-cache-v1",URLS_TO_CACHE=["/","/index.html","/src/css/style.css","/src/js/app.js","/manifest.json","/icons/icon-512.png","/icons/icon-192.png"];self.addEventListener("install",(e=>{e.waitUntil(caches.open(CACHE_NAME).then((async e=>{console.log("[SW] Installing and caching...");for(const t of URLS_TO_CACHE)try{await e.add(t),console.log(`Cached: ${t}`)}catch(e){console.error(`Gagal cache URL: ${t}`,e)}})))})),self.addEventListener("activate",(e=>{console.log("[SW] Activating..."),e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e!==CACHE_NAME)return console.log("[SW] Deleting old cache:",e),caches.delete(e)}))))))})),workbox.routing.registerRoute((({url:e})=>"https://story-api.dicoding.dev"===e.origin),new workbox.strategies.NetworkFirst({cacheName:"api-cache"})),workbox.routing.registerRoute((({url:e})=>"https://unpkg.com"===e.origin&&(e.pathname.endsWith(".css")||e.pathname.endsWith(".js"))),new workbox.strategies.StaleWhileRevalidate({cacheName:"leaflet-cdn-cache"})),workbox.routing.registerRoute((({request:e})=>"image"===e.destination),new workbox.strategies.CacheFirst({cacheName:"images-cache",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:50,maxAgeSeconds:604800})]})),self.addEventListener("push",(e=>{e.waitUntil((async()=>{let t={};if(e.data)try{t=e.data.json()}catch(i){t={title:"Notifikasi Baru",message:e.data.text()}}console.log("[SW] Push received:",t);const i=t.title||"Notifikasi Baru",o={body:t.message||"Ada pesan baru.",icon:"/icons/icon-192.png",vibrate:[100,50,100],data:{dateOfArrival:Date.now(),primaryKey:1}},n=await self.clients.matchAll({type:"window",includeUncontrolled:!0}),s=n.some((e=>"visible"===e.visibilityState&&e.focused));if(console.log("[SW] Clients:",n.length),console.log("[SW] App in focus?",s),!s)return self.registration.showNotification(i,o);n.forEach((e=>{e.postMessage({type:"PUSH_RECEIVED",data:t})}))})())})),self.addEventListener("notificationclick",(e=>{console.log("[SW] Notification click"),e.notification.close(),e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>{for(const t of e)if("/"===t.url&&"focus"in t)return t.focus();return clients.openWindow("/")})))}));